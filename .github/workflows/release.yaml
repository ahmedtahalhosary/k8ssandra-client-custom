name: k8ssandra-client Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  release_k8ssandra_client:
    name: Release Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      - name: Login to GitHub Container Registry
        if: ${{ !env.ACT }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set git parsed values
        id: vars
        shell: bash
        run: |
          echo "sha_short=$(git rev-parse --short=8 ${{ github.sha }})" >> $GITHUB_OUTPUT
          echo "tag_name=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          echo "TARGET_VERSION=$(echo ${GITHUB_REF#refs/tags/} | awk '{print substr($0,2)}')" >> $GITHUB_ENV
          mkdir -p build/
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          load: false
          file: cmd/kubectl-k8ssandra/Dockerfile
          push: true
          context: .
          tags: k8ssandra/k8ssandra-client:${{ steps.vars.outputs.tag_name }}, ghcr.io/k8ssandra/k8ssandra-client:${{ steps.vars.outputs.tag_name }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      - name: Login to Quay.io
        uses: docker/login-action@v3
        with:
          username: redhat-isv-containers+64f725593ba91d38e7246955-robot
          password: ${{ secrets.K8SSANDRA_CLIENT_CONNECT_SECRET }}
      - name: Tag and push images for Red Hat certification
        id: docker_build_redhat
        uses: docker/build-push-action@v6
        with:
          load: false
          file: cmd/kubectl-k8ssandra/Dockerfile
          push: true
          context: .
          tags: quay.io/redhat-isv-containers/64f725593ba91d38e7246955:${{ steps.vars.outputs.tag_name}}
          platforms: linux/amd64,linux/arm64
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      - name: Install CLI tools from OpenShift Mirror
        uses: redhat-actions/openshift-tools-installer@v1
        with:
          source: "mirror"
          oc: "4"
      - name: Install CLI tools from GitHub
        uses: redhat-actions/openshift-tools-installer@v1
        with:
          source: "github"
          github_pat: ${{ github.token }}
          preflight: "latest"
      - name: Run preflight checks and submit results
        shell: bash
        run: |
          preflight check container quay.io/redhat-isv-containers/64f725593ba91d38e7246955:${{ steps.vars.outputs.tag_name}} --certification-project-id=64f725593ba91d38e7246955 --pyxis-api-token=${{ secrets.PREFLIGHT_KEY }} --submit --docker-config=$HOME/.docker/config.json
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          distribution: goreleaser
          version: "~> v1"
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          